import{_ as l,C as c,c as p,o,j as a,ag as n,a as i,G as t,w as r}from"./chunks/framework.2iAenq4z.js";const B=JSON.parse('{"title":"Balanced Acceptance Sampling","description":"","frontmatter":{},"headers":[],"relativePath":"reference/samplers/balancedacceptance.md","filePath":"reference/samplers/balancedacceptance.md"}'),d={name:"reference/samplers/balancedacceptance.md"},h={class:"jldocstring custom-block",open:""};function m(g,e,k,u,b,y){const s=c("Badge");return o(),p("div",null,[e[4]||(e[4]=a("h1",{id:"Balanced-Acceptance-Sampling",tabindex:"-1"},[i("Balanced Acceptance Sampling "),a("a",{class:"header-anchor",href:"#Balanced-Acceptance-Sampling","aria-label":'Permalink to "Balanced Acceptance Sampling {#Balanced-Acceptance-Sampling}"'},"​")],-1)),a("details",h,[a("summary",null,[e[0]||(e[0]=a("a",{id:"BiodiversityObservationNetworks.BalancedAcceptance-reference-samplers-balancedacceptance",href:"#BiodiversityObservationNetworks.BalancedAcceptance-reference-samplers-balancedacceptance"},[a("span",{class:"jlbinding"},"BiodiversityObservationNetworks.BalancedAcceptance")],-1)),e[1]||(e[1]=i()),t(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[3]||(e[3]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;">BalancedAcceptance</span></span></code></pre></div><p><code>BalancedAcceptance</code> implements Balanced Acceptance Sampling (BAS), which uses Halton sequences to provide spatially well-spread samples. When inclusion probabilities are supplied, a 3D Halton sequence is used: the first two dimensions spread locations spatially and the third acts as a random threshold for acceptance against the inclusion surface.</p><p>If inclusion probabilities are not provided, a 2D Halton sequence is used to generate a spatially balanced sample of size <code>num_nodes</code> while respecting raster masks.</p>',3)),t(s,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...e[2]||(e[2]=[a("a",{href:"https://github.com/PoisotLab/BiodiversityObservationNetworks.jl/blob/a7d32bc5f6558ea22e251490da729de69bdb2c0a/src/samplers/balancedacceptance.jl#L1-L10",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e[5]||(e[5]=n(`<h2 id="Example" tabindex="-1">Example <a class="header-anchor" href="#Example" aria-label="Permalink to &quot;Example {#Example}&quot;">​</a></h2><h3 id="Using-a-polygon" tabindex="-1">Using a polygon <a class="header-anchor" href="#Using-a-polygon" aria-label="Permalink to &quot;Using a polygon {#Using-a-polygon}&quot;">​</a></h3><p>First, load the packages we will use for this example</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> BiodiversityObservationNetworks</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> CairoMakie</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> SpeciesDistributionToolkit </span><span style="--shiki-light:#D32F2F;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292EFF;--shiki-dark:#B392F0;"> SDT</span></span></code></pre></div><p>now sample a <a href="/BiodiversityObservationNetworks.jl/dev/reference/api#BiodiversityObservationNetworks.BiodiversityObservationNetwork"><code>BiodiversityObservationNetwork</code></a></p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes min-light min-dark vp-code" tabindex="0"><code><span class="line highlighted"><span>num_nodes = 50</span></span>
<span class="line"><span>corsica = SDT.getpolygon(SDT.PolygonData(OpenStreetMap, Places), place=&quot;Corsica&quot;)</span></span>
<span class="line"><span>bon = sample(BalancedAcceptance(num_nodes), corsica)</span></span></code></pre></div>`,6))])}const _=l(d,[["render",m]]);export{B as __pageData,_ as default};
